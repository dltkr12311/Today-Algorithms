/*
최대공약수와 최소공배수
문제 설명
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

제한 사항
두 수는 1이상 1000000이하의 자연수입니다.
입출력 예
n	m	  return
3	12	[3, 12]
2	5	  [1, 10]
입출력 예 설명
입출력 예 #1
위의 설명과 같습니다.

입출력 예 #2
자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.
*/

function solution(n, m) {
  let getGcd = (n, m) => (m > 0 ? getGcd(m, n % m) : n);
  let getLcm = (n, m, gcd) => (n * m) / gcd;
  let gcd = getGcd(n, m);
  console.log([gcd, getLcm(n, m, gcd)]);
}

solution(3, 12);

//최대 공약수, 최소 공배수 공부한점
// 유클리드 호제법에 대해 공부하였음. n 과 m의 나머지를 gcd라고 했을때 getGcd(n, m) = getGcd(m , gcd)는 같다고 할 수 있다.

//유클리드 호제법의 특징은 매개변수로 x,y가 주어지고 x % y = r 이라고 했을때 x,r의 최대 공약수랑 y와 r의 최대 공약수는 같다
